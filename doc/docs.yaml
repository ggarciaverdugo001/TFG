openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/curso:
    get:
      tags:
      - curso-entity-controller
      description: get-curso
      operationId: getCollectionResource-curso-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurso'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurso'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - curso-entity-controller
      description: create-curso
      operationId: postCollectionResource-curso-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
  /api/curso/search/findByCodigo:
    get:
      tags:
      - curso-search-controller
      operationId: executeSearch-curso-get
      parameters:
      - name: codigo
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "404":
          description: Not Found
  /api/curso/{id}:
    get:
      tags:
      - curso-entity-controller
      description: get-curso
      operationId: getItemResource-curso-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "404":
          description: Not Found
    put:
      tags:
      - curso-entity-controller
      description: update-curso
      operationId: putItemResource-curso-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - curso-entity-controller
      description: delete-curso
      operationId: deleteItemResource-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-entity-controller
      description: patch-curso
      operationId: patchItemResource-curso-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
  /api/curso/{id}/profesor:
    get:
      tags:
      - curso-property-reference-controller
      description: get-profesor-by-curso-Id
      operationId: followPropertyReference-curso-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - curso-property-reference-controller
      description: update-profesor-by-curso-Id
      operationId: createPropertyReference-curso-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-profesor-by-curso-Id
      operationId: deletePropertyReference-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-property-reference-controller
      description: patch-profesor-by-curso-Id
      operationId: createPropertyReference-curso-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
  /api/curso/{id}/profesor/{propertyId}:
    get:
      tags:
      - curso-property-reference-controller
      description: get-profesor-by-curso-Id
      operationId: followPropertyReference-curso-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "404":
          description: Not Found
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-profesor-by-curso-Id
      operationId: deletePropertyReferenceId-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/profesor:
    get:
      tags:
      - profesor-entity-controller
      description: get-profesor
      operationId: getCollectionResource-profesor-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProfesor'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProfesor'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - profesor-entity-controller
      description: create-profesor
      operationId: postCollectionResource-profesor-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
  /api/profesor/{id}:
    get:
      tags:
      - profesor-entity-controller
      description: get-profesor
      operationId: getItemResource-profesor-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "404":
          description: Not Found
    put:
      tags:
      - profesor-entity-controller
      description: update-profesor
      operationId: putItemResource-profesor-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
    delete:
      tags:
      - profesor-entity-controller
      description: delete-profesor
      operationId: deleteItemResource-profesor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - profesor-entity-controller
      description: patch-profesor
      operationId: patchItemResource-profesor-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
  /api/profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /api/profile/curso:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/profesor:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/resenases:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/resenases:
    get:
      tags:
      - resenas-entity-controller
      description: get-resenas
      operationId: getCollectionResource-resenas-get_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelResenas'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelResenas'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - resenas-entity-controller
      description: create-resenas
      operationId: postCollectionResource-resenas-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenasRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResenas'
  /api/resenases/{id}:
    get:
      tags:
      - resenas-entity-controller
      description: get-resenas
      operationId: getItemResource-resenas-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResenas'
        "404":
          description: Not Found
    put:
      tags:
      - resenas-entity-controller
      description: update-resenas
      operationId: putItemResource-resenas-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenasRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResenas'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResenas'
        "204":
          description: No Content
    delete:
      tags:
      - resenas-entity-controller
      description: delete-resenas
      operationId: deleteItemResource-resenas-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resenas-entity-controller
      description: patch-resenas
      operationId: patchItemResource-resenas-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenasRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResenas'
        "204":
          description: No Content
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelProfesor:
      type: object
      properties:
        codigo:
          type: integer
          format: int32
        nombre:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelProfesor:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            profesor:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProfesor'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCurso:
      type: object
      properties:
        codigo:
          type: integer
          format: int32
        nombre:
          type: string
        identificador:
          type: string
        nhoras:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCurso:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            curso:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCurso'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelResenas:
      type: object
      properties:
        id:
          type: integer
          format: int32
        reseñas:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelResenas:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resenases:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelResenas'
        _links:
          $ref: '#/components/schemas/Links'
    CursoRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int32
        nombre:
          type: string
        identificador:
          type: string
        nhoras:
          type: integer
          format: int32
        profesor:
          type: string
    ProfesorRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int32
        nombre:
          type: string
    ResenasRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int32
        reseñas:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
